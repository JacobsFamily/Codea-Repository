ENEMY_SPAWN_EASY = 0
ENEMY_SPAWN_HARD = 1

EnemyHorde = class()

function EnemyHorde:init()
    -- you can accept and set parameters here
    self.frame = 0
    self.units = {} -- enemy units
    self.heroBullets = {} -- hero's bullets
    self.explosions = {}
    self.enemySize = 50
    self.killCount = 0
    self.spawnPattern = ENEMY_SPAWN_EASY
end

function EnemyHorde:draw()
    self.frame = (self.frame+1)%128

    pushStyle()

    if self.spawnPattern == ENEMY_SPAWN_EASY then
        tint(255, 255, 255, 255)
    else
        tint(223, 138, 142, 255)
    end

    stroke(217, 158, 105, 255)
    strokeWidth(8)

    -- Spawn random enemy every 100 frames
    if self.frame%100 == 0 then
        spawn = vec2( math.random(WIDTH), HEIGHT + self.enemySize )
        table.insert( self.units, spawn )
    end

    for i,v in ipairs(self.units) do
        -- Move unit down
        v.y = v.y - 5    

        -- If hard, move in sine wave
        if self.spawnPattern == ENEMY_SPAWN_HARD then
            -- Compute movement vector
            sideMove = vec2( math.sin(v.y * 0.02) * 60, 0 )
            v = v + sideMove
        end

        -- Cull unit
        culled = false
        if (v.y + self.enemySize) < 0 then
            table.remove(self.units, i)
            culled = true -- no continue statement
        end

        -- Check if hit by a bullet
        if culled == false then
            for j,b in ipairs(self.heroBullets) do
                if v:dist(b) < self.enemySize/2 then
                    table.remove(self.units, i)
                    table.remove(self.heroBullets, j)
                    
                    -- Explode!
                    table.insert(self.explosions, Explosion(v))

                    -- Update killCount
                    self.killCount = self.killCount + 1
                end
            end
        end

        -- Draw unit
        sprite("Tyrian Remastered:Enemy Ship D", v.x, v.y, self.enemySize)
    end

    -- Draw explosions
    for i,e in ipairs(self.explosions) do
        e:draw()

        if e:isDone() then
            table.remove(self.explosions,i)
        end
    end

    popStyle()
end
